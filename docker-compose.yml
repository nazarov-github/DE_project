services:
  postgres-airflow:
    image: postgres:14
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_airflow_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - airflow_net
      
  postgres-app:
    image: postgres:14
    environment:
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
      POSTGRES_DB: appdb
    ports:
      - "5434:5432"
    volumes:
      - postgres_app_data:/var/lib/postgresql/data
    networks:
      - airflow_net
      
  postgres-superset:
    image: postgres:14
    environment:
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset_password
      POSTGRES_DB: superset_db
    volumes:
      - postgres_superset_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - airflow_net

  airflow-webserver:
    image: apache/airflow:2.9.0
    restart: always
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "sPGSiFrzRQni2XFRwE_SnUzPaa0K4d7EpT_vpAJ1Oy8="
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
      AIRFLOW__LOGGING__LOGGING_LEVEL: INFO
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - airflow_net

  airflow-scheduler:
    image: apache/airflow:2.9.0
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "sPGSiFrzRQni2XFRwE_SnUzPaa0K4d7EpT_vpAJ1Oy8="
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler
    networks:
      - airflow_net

  airflow-triggerer:
    image: apache/airflow:2.9.0
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "sPGSiFrzRQni2XFRwE_SnUzPaa0K4d7EpT_vpAJ1Oy8="
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: triggerer
    networks:
      - airflow_net
     
  airflow-init:
    image: apache/airflow:2.9.0
    container_name: airflow-init
    depends_on:
      - postgres-airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
      AIRFLOW__CORE__FERNET_KEY: "sPGSiFrzRQni2XFRwE_SnUzPaa0K4d7EpT_vpAJ1Oy8="
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: ["db", "init"]
    networks:
      - airflow_net 
      
  airflow-create-user:
    image: apache/airflow:2.9.0
    container_name: airflow-create-user
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
    command: ["users", "create", "--username", "admin", "--password", "admin", "--firstname", "Admin", "--lastname", "User", "--role", "Admin", 
    	     "--email", "admin@example.com"]
    networks:
      - airflow_net

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9002:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - airflow_net

  # Сервис ClickHouse для аналитики и хранения данных
  clickhouse:
    image: yandex/clickhouse-server:latest
    # HTTP интерфейс (8123) и Native протокол (9000)
    ports:
      - "8123:8123"  # HTTP интерфейс для запросов
      - "9000:9000"  # Native протокол для клиентов (используется Spark)
    # Постоянное хранение данных
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./scripts/clickhouse_init.sql:/docker-entrypoint-initdb.d/init.sql
    # Настройки аутентификации и доступа
    environment:
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: "1"  # Включить управление доступом
      # Настройки для доступа из Spark
      CLICKHOUSE_ALLOW_SPARK: "1"
      CLICKHOUSE_NETWORK_COMPRESSION: "1"  # Сжатие данных для Spark
    networks:
      - airflow_net  # Общая сеть с Kafka/Zookeeper/Spark

  superset:
    image: apache/superset:latest
    ports:
      - "8088:8088"
    environment:
      SUPERSET_ENV: production
      SUPERSET_DATABASE_URI: postgresql+psycopg2://superset:superset_password@postgres-superset:5432/superset_db
    volumes:
      - ./config/superset_config.py:/app/pythonpath/superset_config.py
      - superset_home:/app/superset_home
    networks:
      - airflow_net
  
  superset-init:
    image: apache/superset:latest
    container_name: superset-init
    depends_on:
      - superset
    environment:
      SUPERSET_ENV: production
      SUPERSET_DATABASE_URI: postgresql+psycopg2://superset:superset_password@postgres-superset:5432/superset_db
    volumes:
      - ./config/superset_config.py:/app/pythonpath/superset_config.py
    command: >
      sh -c "flask db upgrade &&
             flask fab create-admin
               --username admin
               --password admin
               --firstname Admin
               --lastname User
               --email admin@example.com"
    networks:
      - airflow_net
      
  jupyter:
    build:
      context: ./spark
      dockerfile: Dockerfile.spark
    image: airflow-jupyter
    ports:
      - "8889:8888"
    volumes:
       - ./config/jupyter_notebook_config.py:/home/jovyan/.jupyter/jupyter_notebook_config.py
       - ./notebooks:/home/jovyan/notebooks
       - .spark/jars:/home/jovyan/jars
    networks:
      - airflow_net

  spark:
    build:
      context: ./spark
      dockerfile: Dockerfile.spark
    image: airflow-spark
    ports:
      - "4040:4040"
      - "8890:8888"
    volumes:
      - .spark/jars:/home/jovyan/jars
      - ./scripts:/home/jovyan/scripts
    networks:
      - airflow_net

  # Сервис Zookeeper (требуется для работы Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - airflow_net

  # Сервис Kafka для обработки потоковых данных
  kafka:
    image: confluentinc/cp-kafka:7.4.1
    depends_on:
      - zookeeper
    environment:
      # Настройки для работы Kafka
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Подключение к Zookeeper
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092  # Доступ внутри и снаружи сети
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT  # Протоколы безопасности
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT  # Внутренний listener
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Фактор репликации
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Автосоздание топиков
      KAFKA_DELETE_TOPIC_ENABLE: "true"  # Разрешение удаления топиков
    ports:
      - "9092:9092"  # Порт для внутреннего доступа
      - "29092:29092"  # Порт для внешнего доступа
    networks:
      - airflow_net

  # Веб-интерфейс для управления Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
    networks:
      - airflow_net

networks:
  airflow_net:

volumes:
  postgres_airflow_data:
  postgres_app_data:
  postgres_superset_data:
  clickhouse_data:
  minio_data:
  superset_home:
  notebooks:
